version: '3.8'

services:
  # Postgres Database
  postgres:
    image: postgres:14.4-alpine3.16
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    volumes:
      - /tmp/admin/include/postgres_data:/var/lib/postgresql/data
    networks:
      - internal
    ports:
      - "5432:5432"
    restart: unless-stopped

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:8.0
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    depends_on:
      - postgres
    networks:
      - internal
    ports:
      - "5050:80"
    restart: unless-stopped

  # Portainer
  # admin
  # ewIstRasteoU
  portainer:
    restart: unless-stopped
    image: portainer/portainer-ce:2.21.5
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/admin/include/portainer_data:/data
    networks:
      - internal
    ports:
      - "9000:9000"

#proxy
#admin@gmail.com
#ewIstRasteoU
  proxy_app:
    image: docker.io/jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    environment:
      # Postgres parameters:
      DB_POSTGRES_HOST: 'postgres'
      DB_POSTGRES_PORT: '5432'
      DB_POSTGRES_USER: 'admin'
      DB_POSTGRES_PASSWORD: 'admin'
      DB_POSTGRES_NAME: 'proxy'     
      # User 
      INITIAL_ADMIN_EMAIL: admin@gmail.com
      INITIAL_ADMIN_PASSWORD: ewIstRasteoU  
    dns:
      - 8.8.8.8
      - 1.1.1.1
    volumes:
      - /tmp/admin/external/proxy/data:/data
      - /tmp/admin/external/proxy/letsencrypt:/etc/letsencrypt
    networks: 
      - internal
    depends_on:
      - postgres

#MQTT Broker      
#admin
#ewIstRasteoU1
  emqx1:
    image: emqx:5.8.4
    container_name: emqx1
    restart: always    
    environment:
    - "EMQX_NODE_NAME=emqx@node1.emqx.io"
    - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
    - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.io,emqx@node2.emqx.io]"
    - "EMQX_LISTENER__WSS__DEFAULT__ENABLE=true"
    - "EMQX_LISTENER__WSS__DEFAULT__BIND=0.0.0.0:8084"
    - "EMQX_LISTENER__WSS__DEFAULT__SSL__ENABLE=true"
    - "EMQX_LISTENER__WSS__DEFAULT__SSL__CACERTFILE=/etc/emqx/certs/emqx.crt"
    - "EMQX_LISTENER__WSS__DEFAULT__SSL__CERTFILE=/etc/emqx/certs/emqx.crt"
    - "EMQX_LISTENER__WSS__DEFAULT__SSL__KEYFILE=/etc/emqx/certs/emqx.key"  
    # healthcheck:
    #   test: ["CMD", "/opt/emqx/bin/emqx", "ctl", "status"]
    #   interval: 5s
    #   timeout: 25s
    #   retries: 5
    networks:
      internal:
        aliases:
        - node1.emqx.io
    ports:
      - "1883:1883"   # MQTT
      - "8883:8883"   # MQTT over SSL
      - "8083:8083"   # WS (WebSocket)
      - "8084:8084"   # WSS (WebSocket Secure)
    volumes:
      - /tmp/admin/external/emqx/certs:/etc/emqx/certs
      
  emqx2:
    image: emqx:5.8.4
    container_name: emqx2
    environment:
    - "EMQX_NODE_NAME=emqx@node2.emqx.io"
    - "EMQX_CLUSTER__DISCOVERY_STRATEGY=static"
    - "EMQX_CLUSTER__STATIC__SEEDS=[emqx@node1.emqx.io,emqx@node2.emqx.io]"
    # healthcheck:
    #   test: ["CMD", "/opt/emqx/bin/emqx", "ctl", "status"]
    #   interval: 5s
    #   timeout: 25s
    #   retries: 5
    networks:
      internal:
        aliases:
        - node2.emqx.io
    # volumes:
    #   - $PWD/emqx2_data:/opt/emqx/data

networks:
  internal:
    driver: bridge
    external: true
    attachable: true